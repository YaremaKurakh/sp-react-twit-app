{"version":3,"sources":["components/app-header/app-header.js","components/search-panel/search-panel.js","components/post-status-filter/post-status-filter.js","components/post-list-item/post-list-item.js","components/post-list/post-list.js","components/post-add-form/post-add-form.js","components/app/app.js","reportWebVitals.js","index.js"],"names":["Header","styled","div","H1","h1","H2","AppHeader","liked","allPosts","SearcPanel","props","onUpdateSearch","e","term","target","value","setState","state","className","type","placeholder","onChange","this","Component","PostStatusFilter","buttons","selector","label","map","filter","onFilterSelect","buttonStatus","onClick","PostListItem","onDelete","onToggleImportant","onToggleLike","classNames","important","like","React","PostList","posts","elements","item","id","itemProps","ListGroup","PostAddForm","onValueChange","text","onSubmit","preventDefault","onAdd","AppBlock","App","deleteItem","data","index","findIndex","elem","beforeIndex","slice","afterIndex","addItem","newItem","maxId","oldItem","toggler","searchPost","items","length","indexOf","filterPost","visiblePosts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76fb55b8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './app-header.scss';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.div`\r\n.app-header {\r\n    align-items: flex-end;\r\n    justify-content: space-between;\r\n    display: flex;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n    /* width: 150px;\r\n    height: 150px; */\r\n    font-size: 26px;\r\n`;\r\n\r\nconst H2 = styled.h1`\r\n    font-size: 1.2rem;\r\n    color: grey;\r\n`;\r\n\r\nconst AppHeader = ({liked, allPosts}) => {\r\n    return (\r\n        <Header>\r\n            <H1>Yarema Kurakh</H1>\r\n            <H2>{allPosts} записів, вподобаних: {liked}</H2>\r\n        </Header>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import React, {Component} from 'react';\r\n\r\nimport './search-panel.scss';\r\n\r\nexport default class SearcPanel extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: ''\r\n        };\r\n    }\r\n\r\n    onUpdateSearch = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onUpdateSearch(term);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <input \r\n            className=\"form-control search-input\"\r\n            type=\"text\"\r\n            placeholder=\"Пошук по записах\" \r\n            onChange={this.onUpdateSearch}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './post-status-filter.scss';\r\n\r\nexport default class PostStatusFilter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttons = [\r\n            {selector: 'all', label: 'Всі'},\r\n            {selector: 'like', label: 'Вподобані'}\r\n        ];\r\n    }\r\n    render() {\r\n        const buttons = this.buttons.map(({selector, label}) => {\r\n            const {filter, onFilterSelect} = this.props;\r\n\r\n            const active = filter === selector;\r\n            const buttonStatus = active ? 'btn-info' : 'btn-outline-secondary';\r\n\r\n            return(\r\n                <button \r\n                    key={selector} \r\n                    type=\"button\" \r\n                    className={`btn ${buttonStatus}`}\r\n                    onClick={() => onFilterSelect(selector)}>\r\n                        {label}\r\n                    </button>\r\n\r\n            );\r\n        });\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>  \r\n        );\r\n    }\r\n}","import React from 'react';\r\n//import PropTypes from 'prop-types';\r\n\r\nimport './post-list-item.scss';\r\n\r\nexport default class PostListItem extends React.Component {\r\n\r\n    render() {\r\n        const {label, onDelete, onToggleImportant, onToggleLike, important, like} = this.props;\r\n        let classNames = 'app-list-item d-flex justify-content-between';\r\n\r\n        if (important) {\r\n            classNames += ' important';\r\n        }\r\n\r\n        if (like) {\r\n            classNames += ' like';\r\n        }\r\n        \r\n        return (\r\n            <div className={classNames}>\r\n                <span className=\"app-list-item-label\" onClick={onToggleLike}>\r\n                    {label}\r\n                </span>\r\n                <div className=\"d-flex justifu-content-center align-items-center\">\r\n                    <button type=\"button\" className=\"btn-star btn-sm\" onClick={onToggleImportant}>\r\n                        <i className=\"fa fa-star\"></i>\r\n                    </button>\r\n                    <button type=\"button\" className=\"btn-trash btn-sm\" onClick={onDelete}>\r\n                        <i className=\"fa fa-trash-alt\"></i>\r\n                    </button>\r\n                    <i className=\"fa fa-heart\"></i>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nimport PostListItem from '../post-list-item/post-list-item';\r\nimport {ListGroup} from 'reactstrap';\r\nimport './post-list.scss';\r\n\r\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLike}) => {\r\n\r\n    const elements = posts.map((item) => {\r\n        const {id, ...itemProps} = item;\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <PostListItem \r\n                    label = {itemProps.label} \r\n                    important = {itemProps.important}\r\n                    like = {itemProps.like}\r\n                    onDelete={() => onDelete(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)}\r\n                    onToggleLike={() => onToggleLike(id)}\r\n                />\r\n            </li>\r\n        );\r\n    });\r\n    return (\r\n        <ListGroup className=\"app-list\">\r\n            {elements}\r\n        </ListGroup>\r\n    );\r\n};\r\n\r\nexport default PostList;","import React, {Component} from 'react';\r\n\r\nimport './post-add-form.scss';\r\n\r\nexport default class PostAddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text : ''\r\n        };\r\n    }\r\n\r\n    onValueChange = (e) => {\r\n        this.setState({\r\n            text : e.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.text);\r\n        this.setState({\r\n            text: ''\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form \r\n                className=\"bottom-panel d-flex\"\r\n                onSubmit={this.onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Про що ви зараз думаєте\"\r\n                    className=\"form-control new-post-label\"\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-secondary\">\r\n                    Додати\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\nimport AppHeader from '../app-header/app-header';\r\nimport SearcPanel from '../search-panel/search-panel';\r\nimport PostStatusFilter from '../post-status-filter/post-status-filter';\r\nimport PostList from '../post-list/post-list';\r\nimport PostAddForm from '../post-add-form/post-add-form';\r\n\r\nimport './app.scss';\r\nimport styled from 'styled-components';\r\n\r\nconst AppBlock = styled.div`\r\n    margin: 0 auto;\r\n    max-width: 800px;\r\n`;\r\n\r\nexport default class App extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data : [\r\n                {label: \"Вчу React\", important: true, like: false, id: 1},\r\n                {label: \"Йду їсти\", important: false, like: false, id: 2},\r\n                {label: \"Далі вчу React\", important: false, like: false, id: 3},\r\n            ],\r\n            term : '',\r\n            filter : 'all'\r\n        };\r\n        this.maxId = 4;\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            \r\n            const beforeIndex = data.slice(0, index);\r\n            const afterIndex = data.slice(index + 1);\r\n\r\n            const newData = [...beforeIndex, ...afterIndex];\r\n\r\n            return {\r\n                data: newData\r\n            };\r\n        });\r\n    };\r\n\r\n    addItem = (text) => {\r\n        const newItem = {\r\n            label : text,\r\n            important : false,\r\n            like : false,\r\n            id: this.maxId++\r\n        };\r\n\r\n        this.setState(({data}) => {\r\n            const newData = [...data, newItem];\r\n            return{\r\n                data : newData\r\n            };\r\n        });\r\n    };\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            \r\n            const oldItem = data[index];\r\n            const toggler = oldItem.important ? false : true;\r\n            const newItem = {...oldItem, important : toggler};\r\n\r\n            const newData = [...data.slice(0, index), newItem, ... data.slice(index + 1)];\r\n\r\n            return {\r\n                data : newData\r\n            };\r\n        });\r\n    };\r\n\r\n    onToggleLike = (id) => {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            \r\n            const oldItem = data[index];\r\n            const toggler = oldItem.like ? false : true;\r\n            const newItem = {...oldItem, like : toggler};\r\n\r\n            const newData = [...data.slice(0, index), newItem, ... data.slice(index + 1)];\r\n\r\n            return {\r\n                data : newData\r\n            };\r\n        });\r\n    };\r\n\r\n    searchPost = (items, term) => {\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.indexOf(term) > -1;\r\n        });\r\n    };\r\n\r\n    filterPost = (items, filter) => {\r\n        if (filter === 'like') {\r\n            return items.filter(item => item.like);\r\n        } else {\r\n            return items ;\r\n        }\r\n    };\r\n\r\n    onUpdateSearch = (term) => {\r\n        this.setState({term});\r\n    };\r\n\r\n    onFilterSelect = (filter) => {\r\n        this.setState({filter});\r\n    };\r\n\r\n    render() {\r\n        const {data, term, filter} = this.state;\r\n\r\n        const liked = data.filter(item => item.like).length;\r\n        const allPosts = data.length;\r\n\r\n        const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\r\n        return (\r\n            <AppBlock>\r\n                <AppHeader\r\n                    liked={liked}\r\n                    allPosts={allPosts}/>\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearcPanel\r\n                        onUpdateSearch={this.onUpdateSearch}/>\r\n                    <PostStatusFilter\r\n                        filter={filter}\r\n                        onFilterSelect={this.onFilterSelect}/>\r\n                </div>\r\n                <PostList \r\n                    posts={visiblePosts} \r\n                    onDelete={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleLike={this.onToggleLike}/>\r\n                <PostAddForm onAdd={this.addItem}/>\r\n            </AppBlock>\r\n        );\r\n    }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport App from './components/app/app';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <App/>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}